% Generated by roxygen2 (4.0.1): do not edit by hand
\name{SEITL_deter}
\alias{SEITL_deter}
\title{The deterministic SEITL model}
\usage{
example(SEITL_deter)
}
\description{
To get the deterministic SEITL model, type
\code{example(SEITL_deter)}. This executes the code listed below
under "Examples".
}
\examples{

SEITL_deter_name <- "deterministic SEITL model with daily incidence and constant population size"
# note the new state Inc for the daily incidence
SEITL_state.names <- c("S","E","I","T","L","Inc")
SEITL_theta.names <- c("R0", "D.lat", "D.inf", "alpha", "D.imm", "rho")


# Solves the system of ordinary differential equations for the SEITL model.
SEITL_simulateDeterministic <- function(theta,state.init,times) {

	SEITL_ode <- function(time, state, theta) {

		# param
		beta <- theta[["R0"]]/theta[["D.inf"]]
		epsilon <- 1/theta[["D.lat"]]
		nu <- 1/theta[["D.inf"]]
		alpha <- theta[["alpha"]]
		tau <- 1/theta[["D.imm"]]

		# states
		S <- state[["S"]]
		E <- state[["E"]]
		I <- state[["I"]]
		T <- state[["T"]]
		L <- state[["L"]]
		Inc <- state[["Inc"]]

		N <- S + E +I + T + L

		dS <- -beta*S*I/N + (1-alpha)*tau*T
		dE <- beta*S*I/N - epsilon*E
		dI <- epsilon*E - nu*I
		dT <- nu*I - tau*T
		dL <- alpha*tau*T
		dInc <- epsilon*E

		return(list(c(dS,dE,dI,dT,dL,dInc)))
	}


	# put incidence at 0 in state.init
	state.init["Inc"] <- 0

	traj <- as.data.frame(ode(state.init, times, SEITL_ode, theta, method = "ode45"))

	# compute incidence of each time interval
	traj <- mutate(traj,Inc=c(0,diff(Inc)))

	return(traj)

}


# Generate an observed incidence under a Poisson observation process.  
SEITL_genObsPoint <- function(model.point, theta){

	obs.point <- rpois(n=1, lambda=theta[["rho"]]*model.point[["Inc"]])

	return(obs.point)
}

# Evaluate the log of the prior density distribution of the parameter values.
SEITL_logPrior <- function(theta) {

	log.prior.R0 <- dunif(theta[["R0"]], min = 1, max = 50, log = TRUE)
	log.prior.latent.period <- dunif(theta[["D.lat"]], min = 0, max = 10, log = TRUE)
	log.prior.infectious.period <- dunif(theta[["D.inf"]], min = 0, max = 15, log = TRUE)
	log.prior.temporary.immune.period <- dunif(theta[["D.imm"]], min = 0, max = 50, log = TRUE)
	log.prior.probability.long.term.immunity <- dunif(theta[["alpha"]], min = 0, max = 1, log = TRUE)
	log.prior.reporting.rate <- dunif(theta[["rho"]], min = 0, max = 1, log = TRUE)
	
	return(log.prior.R0 + log.prior.latent.period + log.prior.infectious.period + log.prior.temporary.immune.period + log.prior.probability.long.term.immunity + log.prior.reporting.rate)

}


# Computes the log-likelihood of a data point given the state of the model and under a poisson observation process.
SEITL_pointLogLike <- function(data.point, model.point, theta){

	return(dpois(x=data.point[["obs"]],lambda=theta[["rho"]]*model.point[["Inc"]],log=TRUE))

}


# create fitmodel
SEITL_deter <- fitmodel(
	name=SEITL_deter_name,
	state.names=SEITL_state.names,
	theta.names=SEITL_theta.names,
	simulate=SEITL_simulateDeterministic,
	genObsPoint=SEITL_genObsPoint,
	logPrior=SEITL_logPrior,
	pointLogLike=SEITL_pointLogLike)

## test it

# theta <- c("R0"=10, "D.lat"=2 , "D.inf"=3, "alpha"=0.5, "D.imm"=15, "rho"=0.7)
# state.init <- c("S"=280,"E"=0,"I"=2,"T"=0,"L"=4,"Inc"=0)
# data(FluTdC1971)
# testFitmodel(fitmodel=SEITL, theta=theta, state.init=state.init, data= FluTdC1971, verbose=TRUE)


}
\seealso{
\code{\link{fitmodel}}
}

